금요일
민동기
uzs2dk@naver.com
https://cloud.cisco-lab.com/
ID 603
PW 20230328
■ OSI 7 Layer
  - 네트워크 기불의 기본이 되는 모델
  - 컴퓨터에서 컴퓨터로 데이터를 전송할 때, 일어나느 일을
    7개의 계층으로 나눠놓은 것
  - ISO 국제 표준화기구에서 표준 규격을 제정.
 ◇ OSI 7 계층
   7계층 : 응용계층(Application)
   6계층 : 표현계층(Presentation)	message
   5계층 : 세션계층(Session)
   4계층 : 전송계층(Trasport)		segment		TCP, UDP
   3계층 : 네트워크(Network)		packet		IP, ICMP, ARP
   2계층 : 데이터링크(DateLink)	frame		Ethernet
   1계층 : 물리(Physical)		bit

 ◇ IP Address
  ▷ 공인 IP
    - 인터넷을 사용하기 위한 유일한 IP 주소
    - 국제 : 국제인터넷주소 관리기구 (ICANN), 한국 : 한국인터넷정보센터(KRINC)

  ▷ 사설 IP
    - IP를 사용하는 장비가 많아짐에 따라 기업이나 가정 내에서
      네트워크를 원활하게 사용하기 위해 쓰는 IP 주소
    - 고갈되어가는 공인 IP의 소모를 줄이기 위해 사용
    - 같은 IP라고 하더라도 회사나 가정 내에서 충돌없이 사용 가능
    - 외부와 통신을 할 때는 공인IP를 가지고 통신을 하기 때문에 내부의 IP가
      외부에 노출되지 않음(보안에 유리)

  ▷ IP는 32자리의 2진수로 구성
    - 0.0.0.0 ~ 255.255.255.255
    - 8비트씩 묶어서 옥텟이라고도 함.

  ▷ SubnetMask
   - IP와의 연산을 통해 네트워크의 범위를 지정
   - 논리연산의 하나인 AND 연산을 함.
     : 참 + 참 -> 참 // 1과 1이 만나야 결과는 1. 나머지는 0
	0	0	→	0
	0	1	→	0
	1	0	→	0
	1	1	→	1
   - 연산의 결과를 네트워크 ID라고 하며, 네트워크를 대표하는 IP가 된다.
   - 서브넷마스크의 1비트는 '앞에서부터 차례대로 채워져야한다'
   - 서브넷마스크의 표시는 10진수로 표시 가능
   - CIDR 표기법 : /서브넷마스크의 비트수 (prefix라고도 읽음)
	ex) 10.100.202.81  255.255.255.0  => 10.100.202.81/24

  ▷ CLASS
A 클레스 1.0.0.0 ~ 127.0.0.0		/8
B 클레스 128.0.0.0 ~ 191.255.0.0	/16
C 클레스 192.0.0.0 ~ 223.255.255.0	/24
D 클레스 224
E 클레스 240

  ▷ Class별 사설 IP
A 클레스	10.0.0.0 ~ 10.255.255.255		10.0.0.0/8
B 클레스	172.16.0.0 ~ 172.31.255.255		172.16.0.0/12
C 클레스	192.168.0.0 ~ 192.168.255.255	192.168.0.0/16

  ▷ 서브넷팅과 슈퍼넷팅
   - 서브넷팅 : 네트워크를 분리시키는 것. 주소 절약, 브로드캐스트 도메인 축소, 라우팅 정보 크기 감소
   - 슈퍼넷팅 : 여러 네트워크의 공통 부분을 정리하여 하나의 네트워크로 묶는 것. 라우팅 크기 감소

■ CentOS7
※ 가상머신 만들기
 이름 : CentOS-TEST (IP100) -aws4
 RAM : 2G
 CPU : 1
 HDD : 20G
 IP : 192.168.56.100
 ▷ IP 넣기
  0. 로그인 
    아이디 : root
    비번 : busanit
  1. IP 및 네트워크 어댑터 이름 확인
# ip address show
# ip -br address show	// IPv4, IPv6 만 나옴
# ip link show		// MAC 주소 확인

  2. IP 주소 수동으로 넣기
   a. IP 설정 파일 위치로 이동
# cd /etc/sysconfig/network-scripts/
   
   b. ifcfg-enp0s8 파일을 vi에디터로 열기
# vi ifcfg-enp0s8
	i 키 누르기
	4번째 줄 젤 앞에 # 넣기
	마지막 줄 no를 yes로 변경
	BOOTPROTO=static
	IPADDR=192.168.56.100
	NETMASK=255.255.255.0
	GATEWAY=192.168.56.2
	DNS1=8.8.8.8
	esc키 2~3번 누르기
	:wq     엔터

# vi ifcfg-enp0s3
	i키 누르기
	마지막 줄 no 를 yes로 변경
	esc키 2~3번 누르기
	:wq	엔터

   c. 변경사항 적용
# systemctl restart network

   d. IP 확인
# ip a

   e. 외부 통신 확인
# ping 8.8.8.8
	중지 시 컨트롤 씨 (Ctrl + c)

   f. DNS 주소 확인 
# cat /etc/resolv.conf

■ 리눅스 시작과 종료 (P.145)
 ▷ shutdown
# shutdown [option] 시간
 ※ 옵션
	-h : 시스템 종료
	-r : 시스템 재부팅
	-c : 예약된 셧다운을 취소
	-k : 셧다운 메세지만 보냄
	-P : 시스템 및 전원 끄기 (대문자 P)
 ※ 시간
	기본적으로는 +m 형식
	hh:mm 형식으로도 가능
ex) 
shutdown -r now	: 지금 재부팅
shutdown -h +30	: 30분 뒤 종료
shutdown -c	: 종료 예약 취소
shutdown -r 10:10	: 10시 10분에 재부팅

 ▷ halt
# halt -p	: 시스템 종료 (+ 전원 off)
# halt -f	: 강제 종료

 ▷ reboot
# reboot	: 시스템 재시작
# reboot -f   : 시스템 강제로 재시작
# reboot -h   : 시스템 종료
# reboot -p   : 시스템 종료 및 전원 끄기

 ▷ init ( 시스템에 문제가 생긴 응급상황인 경우 )
# init 0	: 시스템 종료
# init 6	: 시스템 재부팅

■ 이동 및 확인 (P.180~)
 ▷ 현재 위치 확인
# pwd

 ▷ 디렉토리 내용 확인
# ls [옵션] [경로]
 ※ 옵션
	-a  : 숨김 파일 및 디렉토리까지
	-l  : 자세히
	-h  : 단위를 보기 편하게 (K, M, G)
	-R  : 하위 디렉토리까지
	-ld  :  [경로]의 속성을 자세히 (디렉토리에 사용)

 ▷ 위치 이동
  - 절대 경로 
    : 최상위 디렉토리인 / 기준으로 상대방 위치를 지정
      / 로 시작
  - 상대 경로 
    : 현재 내가 있는 곳을 기준으로 상대방 위치를 지정
      ./ 또는  ../ 로 시작 (단, ./는 생략 가능)
# cd 		- 현재 접속한 계정의 홈디렉토리
# cd [경로]	- [경로]로 이동
# cd ~[계정]	- [계정]의 홈디렉토리로 이동

■ 파일 및 디렉토리
 ▷ 파일 생성
# touch	: 크기가 0인 빈 파일 만들기
              파일이 있는 경우 마지막 수정날짜 변경

 ▷ 디렉토리 생성
# mkdir	: 디렉토리 생성
         -p	: 상위 디렉토리가 없을 경우 같이 생성

 ▷ 파일 삭제
# rm [옵션] [대상]
  ※ 옵션
	-i  : 삭제시 물어봄
	-f  : 강제로 삭제 
	-r  : 디렉토리 삭제 ( 안에꺼지 다 )

 ▷ 디렉토리 삭제
# rmdir [디렉토리]		단, 빈 디렉토리만 삭제가능

 ▷ 파일 및 디렉토리 복사 
# cp [타켓] [목적지]	
	※ 타켓이 디렉토리일 경우 -r 옵션 사용
 => 복사의 결과
   1. 목적지가 디렉토리 일 경우
	- 디렉토리 안으로 복사
   2. 목적지와 같은 이름이 없을 때
	- 목적지 이름으로 복사
   3. 목적지가 파일일 때
	- 덮어쓰기

 ▷ 파일 및 디렉토리 이동
# mv [타켓] [목적지]	
	※ 타켓이 디렉토리일 경우에도 r옵션 사용 안함
 ※ 현재 디렉토리에서 현재 디렉토리로 이동 
      (결과 2번의 경우)
   => 파일이나 디렉토리의 이름 변경

 ▷ 내용 확인
# cat [파일]	: 파일의 내용을 화면에 출력
# more [파일]
# less [파일]
	=> 한페이지씩 화면에 출력, 이동가능
	     /패턴    단어검색 가능
	     끝낼때는 q
# head [파일]	: 파일의 처음부터 10줄 출력
         -n		: n줄 만큼 출력
# tail [파일]	: 파일의 마지막부터 10출력	
         -n		: n줄 만큼 출력
         -f		: 파일 추가 내용을 계속 출력 	
 
■ history
  - 예전에 실행했었던 명령어들을 볼 수가 있다.
  !!	직전 명령어를 다시 사용
  !번호	'번호'에 해당하는 명령어 실행
  !문자	'문자'로 시작하는 가장 최근 명령어 실행

■ vi 편집기
☆ 필수로 외워야하는 명령어 ☆
G	제일 마지막 행으로 이동
gg	제일 첫 행으로 이동
i	입력모드 진입
#	주석처리 (적용 안되는 내용)
:se nu	행번호 붙이기
:숫자	'숫자'행으로 이동
:w	저장
:wq	저장하고 닫기
:q	닫기 (!)
-----------------------------------------------
yy	행복사 (숫자 yy)
p	붙여넣기
dd	행삭제 (숫자 dd)
u	되돌리기

※ 새 가상머신 만들기
이름 : WEB-Server (IP5)
ISO : CentOS7-2009 (Ver.Minial)
전부 다 기본
Network Adapter 
	1. NAT
	2. 호스트 전용
IP Address
	1. NAT - DHCP (기본)
	2. 호스트 전용 : 192.168.56.5/24

■ 사용자 및 그룹
 ◇ /etc/passwd
  - 리눅스의 사용자 계정 정보는 /etc/passwd파일에 기록
  - 생성하지 않았는데 존재하는 계정은 시스템 계정
   -> 파일을 생성하거나 프로세스를 생성하거나 운영할 때
      반드시 소유자를 명시하도록 되어있고 소유자의 권한을
      승계함.
 root:x:0:0:root:/root:/bin/bash
- 각 항목을 구분하기 위해 : 으로 표시
   1. 로그인 ID (계정)
   2. 비밀번호 - 현재는 /etc/shadow 파일로 이관
   3. UID
   4. GID
   5. 계정에 대한 설명(옵션)
   6. 계정의 홈디렉토리
   7. 계정의 기본 쉘

 ◇ /etc/group
   - 그룹 정보를 기록

 ◇ /etc/shadow
   - 비밀번호 관련 정보를 기록하는 곳
root:$6$Hjj1Yh7XWcjO/Es9$0Lzw::0:99999:7:::
   1. 로그인 ID (계정)
   2. 비밀번호 (암호화, SHA-512)
   3. 암호의 최종 변경일
   4. 암호 최소 사용 기간
   5. 암호 최대 사용 기간
   6. 암호 만료 경고
   7. 만료 후 사용할 수 있는 기간 (INACTIVE)
   8. 계정 만료일
 ※ 1970년 1월 1일을 기준으로 지나간 날짜를 기록

 ◇ 사용자 생성
# useradd  [옵션]  [계정]
	-g	: 주그룹 지정, 그룹이 생성되어 있어야 함.
	-G	: 보조그룹 지정
	-b	: 홈디렉토리 지정 (상위)
	-d	: 홈디렉토리 지정. 중간 경로까지는 미리 생성
	-c	: 사용자 설명 설정
	-u	: UID 지정

 ◇ 사용자 생성 시 참조 파일
# vim /etc/login.defs
# vim /etc/default/useradd
	또는 # useradd -D
# ls -al /etc/skel

 ◇ 그룹 생성
# groupadd [그룹명]

 ◇ 사용자 정보 변경
# usermod  [옵션]  [계정]
	-g	: 주그룹 변경
	-G	: 보조 그룹 변경
	-aG	: 보조 그룹 추가
	-d	: 홈디렉토리 변경
		(-m 옵션과 함께 사용하면 기존 파일 이동)

 ◇ 그룹 정보 변경
# groupmod  [옵션]  [그룹]
	-n	: 그룹명 변경

 ◇ 사용자 비밀번호 변경
# passwd  [옵션]  [계정]
	-S	: 비밀번호 출력
	-l	: 비밀번호 잠금
	-u	: 비밀번호 잠금 해제
	-d	: 비밀번호 삭제
	-e	: 다음 로그인 시 비밀번호 설정하도록 함
  ※ root 계정만 가능
     일반 계정은 자신의 비빌번호 변경만 가능

 ◇ 그룹 비밀번호 및 관리자 설정
# gpasswd  [옵션]  [그룹]
	-A	: 그룹 관리자 지정
	-a	: 그룹에 사용자 추가
	-d	: 그룹에서 사용자 제외
	-M	: 그룹에 멤버 추가

 ◇ 사용자 삭제
# userdel  [옵션]  [계정]
	-r	: 계정과 관련된 정보들까지 다 삭제

 ◇ 그룹 삭제
# gruopdel  [그룹]
  ※ 그룹 삭제 시에는 그 그룹을 주그룹으로 사용하는 계정이
     없어야지 삭제 가능
▷ 다음을 조건으로 하는 GilDong 계정을 생성하세요.
1. 길동 계정의 주 그룹은 office
2. 길동 계정의 보조 그룹은 Tech, Service
3 길동 계정의 홈 디렉토리는 /Engineer/GilDong
4. 계정 생성 시 'welcome' 문서 배포하도록 설정
  - 내용은 abcdefg

■ 파일 위치 검색 (P.229)
 ◇ find 명령어
# find  [찾을 경로]  [옵션]  [조건]  [action]
  ※ 옵션
	-name	: 파일 이름으로
	-size	: 파일 크기로
	-perm	: 파일 허가권으로
	-user	: 파일 소유자로
	-group	: 파일 소유그룹으로
	-uid	: 소유자 UID
	-gid	: 소유 그룹 GID
	-type	: 어떤 유형의 파일
	  	 d(디렉토리), f(일반파일), l(링크파일) 등등
	-mtime	: 데이터등의 수정 시간
	-atime	: 접근 시간을 기준
	-ctime	: 속성 등의 부가 정보가 변경한 시간
  ※ 액션
	-print	: 화면에 출력 (기본값)
	-ls	: 결과를 자세히 출력 (ls -il의 역할)
	-exec [명령어] {} \;	   : 결과를 가지고 '명령어' 실행

 ◇ grep
  - 파일의 내용 중 패턴과 일치하는 행 출력
# grep  [옵션]  [패턴]  [파일명]
	-n	: 행번호와 함께 출력
	-i	: 대소문자 구분 안함
	-v	: 패턴이 없는 행 출력
	-c	: 패턴이 포함된 행 갯수만 출력
	-r	: 파일 안의 내용으로 파일 자체를 찾을 때

■ 파이프와 리다이렉션 (P.253)
 ◇ 파이프 ( | <- 쉬프트+\ )
   - 두 개의 프로그램(명령)을 연결해주는 역할을 함.
   - grep 과 함께 필터링의 역할로 많이 사용.

 ◇ 리다이렉션
  - 입출력의 방향을 바꿔줌
   ▷ 파일 디스크립터
     표준 입력 (키보드 입력)			0
     표준 출력 (화면에 보여줌)			1
     표준 에러 (화면에 나오는 에러메세지)	2

   ▷ 리다이렉션 기호
    - 표준 입출력의 방향을 바꿔주는 기호
	> 화면에 나와야하는데 파일에 입력 (덮어쓰기)
	>> 	''		        (이어쓰기)	
	< 표준 입력값이 키보드에서 파일이나 기타 장치로 전환
	<< 설정한 문자열이 입력이 될 때까지 대기했다가
                  한번에 출력

■ 패키지 설치 (P.203)
 ◇ rpm
   - 레드햇에서 만든 패키지 설치 도구
   - .rpm 파일을 다운로드하여 설치 (설치파일이 있어야지 설치 가능)
   - 설치 파일이 현재 내가 있는 디렉토리에 있어야 함.
   - 인터넷이 되지 않아도 설치 파일만 있으면 패키지 설치 가능
   - 의존성 문제

  ▷ 사용법  
   1. 패키지 설치
# rpm  [옵션]  [패키지]
	U	: 패키지 설치/업데이트
	i	: 패키지 설치
	v	: 설치 과정 확인
	h	: 설치 진행율 표시 (#######)
   2. 삭제
# rpm  -e  [패키지]

   3. 질의
# rpm  -qa  [패키지] : 설치된 패키지 출력
# rpm  -qi  [패키지] : 패키지 상세 정보 출력

 ◇ yum (=> dnf)
   - 인터넷을 통해 패키지를 다운로드 후 설치
   - 패키지 저장소 (repository)에서 다운로드 함.
   - 의존성 문제 해결
   - 단, 인터넷이 되어야함.
  ▷ 설치
# yum  install  -y  [패키지] 

  ▷ 삭제
# yum  remove  -y  [패키지] 

  ▷ 패키지 검색
   - 리포지토리에 패키지가 있는지 없는지 검색
   - 패키지에 따라서 사용 명령어로 검색 가능
# yum  search  [패키지]

  ▷ 패키지 정보 확인
# yum  info  [패키지]
--------------------------------------------------------------
rpmfind.net에서 vsftpd 검색 후 배포판에 맞게 
wget으로 다운로드 (마우스 우클릭 후 링크주소복사)
rpm으로 vsftpd 설치까지 함.

■ 서비스 관리 명령어
  - 서비스 동작을 관리하는 명령어
# systemctl  [서브명령어]  [서비스or데몬]
	start	: 서비스 실행
	restart	: 서비스 재시작
	stop	: 서비스 중지
	status	: 서비스 상태 확인
	enable	: 부팅 시 서비스 자동 실행
	disable	:	''	''        중지
	reload	: 설정 파일 다시 불러오기(※)

■ 서버 구축 순서
 1. 원하는 서비스를 제공하는 패키지 찾기
   ex) 웹 - Apache, Nginx / DNS - bind(named)
 2. 패키지 설치
# yum install 
# rpm
 2-2. 패키지 설치 확인
# rpm -qa | grep 
 3. 제공하는 환경에 맞게 서비스 설정
# vim /etc
 4. 설정 적용 및 재시작, 부팅 시 시작 설정, 확인
# systemctl restart  / enable / status
 5. 방화벽 열기
# firewall-cmd --add
 6. 방화벽 설정 확인
# firewall-cmd --list-all
 (7. 포트 릿슨 확인]
# netstat -nltp

■ 파일 접근 권한 (허가권과 소유권) (P.193)
 ◇ 파일 접근 권한
  - 리눅스는 하나의 시스템에 다수의 사용자들이 동시에 접속해서 사용하는 운영체제
  - 여러 사용자들이 동일한 저장 공간을 사용
  - 각각의 사용자들이 생성한 파일이나 디렉토리가 다른 사용자들에게도 노출
  - 소유권과 허가권이라는 권한을 가지고 접근 제어
  - 소유권 : 어떤 파일이나 디렉토리를 소유하는 권리
  	   소유자(User), 소유 그룹(Group), 그 외 사용자(Other)
  - 허가권 : 어떤 일을 할 수 있는 권한
	   읽기(r), 쓰기(w), 실행(x)

 ◇ 허가권
  - 해당 파일이나 디렉토리를 읽고, 쓰고, 실행할 수 있는 권한
  - 소유자, 소유그룹, 그 외 사용자로 분류하여 적용
  - 사용자의 파일을 보호하는 가장 기본적인 기능
  ▷ 읽기 (r)
   - 파일 : 파일을 읽거나 복사
   - 디렉토리 : ls 명령어로 디렉토리 안의 내용 확인 가능

  ▷ 쓰기 (w)
   - 파일 : 파일을 수정, 이동, 삭제 가능 (디렉토리 쓰기)
   - 디렉토리 : 파일 생성, 삭제 가능

  ▷ 실행 (x)
   - 파일 : 파일을 실행할 수 있다.
   - 디렉토리 : cd로 디렉토리 진입, 파일을 붙여넣기   

  ◇ 허가권 변경
# chmod  [permission]  [대상]
          -R : 디렉토리일 경우 적용 시 안의 애들까지 다 변경
   ▷ 기호를 사용하여 권한 변경
# chmod  [사용자][연산기호][권한]  [대상]
    1. 사용자 표시
      u : 소유자, g : 소유그룹, o : 그 외 사용자, a : 모두
    2. 연산자 기호
      + : 권한 추가,  - : 권한 제거,  = : 권한 설정
    3. 권한 문자
       r : 읽기,  w : 쓰기,  x : 실행

   ▷ 숫자를 사용하여 권한 변경
# chmod  [권한을 나타내는 숫자]  [대상]
    - 권한을 소유별로 끊어서 8진수로 표기
    - 읽기, 쓰기, 실행 부분을 이진수로 있으면 1, 없으면 0
      -> 이렇게 이진수로 나타낸 수를 8진수로 변환
    - 숫자로 권한 변경 시 문자의 '='과 같은 의미로 사용

 ◇ 소유권 변경
  - 파일이나 디렉토리의 소유자 및 소유그룹 변경
  - 허가권과 마찬가지로 R 옵션 사용 가능 
  - 허가권은 소유자만 변경 가능
  - 소유권은 root만 변경 가능
  ▷ 소유자 변경
# chown  [소유자]  [대상]
  ▷ 소유그룹 변경
# chgrp  [소유그룹]  [대상]
  ▷ 소유자와 소유그룹 같이 변경
# chown  [소유자].[소유그룹]  [대상]

 ◇ 특수 권한
  ▷ SetUID
   - 주로 실행 파일에 사용됨
   - SetUID가 설정되면 해당 파일이 실행되는 동안에는 파일을 
     실행한 사용자의 권한이 아닌 파일 소유자의 권한이 적용됨
   - 파일 소유자의 실행(x) 부분에 s가 표기, 실행 권한이 없는 경우 S
   - 접근 권한의 맨 앞자리가 4
     ex) 설정 예시 chmod 4755 test.exe

  ▷ SetGID
   - 주로 실행 파일에 사용됨
   - SetGID가 설정되면 해당 파일이 실행되는 동안에는 파일을 
     실행한 사용자의 권한이 아닌 파일 소유 그룹의 권한이 적용됨
   - 파일 소유 그룹의 실행(x) 부분에 s가 표기, 실행 권한이 없는 경우 S
   - 접근 권한의 맨 앞자리가 2
     ex) 설정 예시 chmod 2755 test.exe

  ▷ StickyBit
   - 주로 공유 디렉토리에 사용됨
   - 아무나 디렉토리에 파일을 생성할 수 있고, 파일은 생성한 계정으로
     소유자가 설정되며, 다른 사용자가 생성한 파일은 삭제가 안됨
   - other의 실행 부분에 t가 표기, 실행 권한이 없는 경우에 T
   - 접근 권한의 맨 앞자리가 1
     ex) 설정 예시 chmod 1755 /test

  ※ 권한으로 파일 찾기 (find)
# find / -perm 4755	: 권한과 일치
# find / -perm -4700	: 권한값 이상
# find / -perm /4755	: 권한 중 하나 이상

■ sudoers
 ◇ sudo
  - sudo 명령어는 일반 계정이 일시적으로 root의 권한을 갖게 함
  - root로 접속했을 경우 사고 발생 시 누가 언제 로그인했는지 알 수 없음
  - 일반 계정에서 'su'명령어를 통해 root 접속 시 누가 언제 전환했는지만
    로그에 기록됨.
   -> sudo 명령어를 사용할 경우 /var/log/secure에 로그가 기록됨.
			(sudo로그를 따로 저장할 수도 있음)
  - 일반 계정의 홈디렉토리에서 작업을 할 경우 파일을 주고 받거나
    할 때 자신의 홈디렉토리 사용
   -> 필요한 경우에만 시스템 디렉토리 사용.   
 
 ◇ 개인별 sudo 권한 주기
  - /etc/sudoers 파일에 적용
	95행 부터 user 적용
	100행의 문법과 같이 계정 등록
  - visudo 명령어를 통해 수정
    -> sudoers 파일은 readonly, !를 사용하면 저장 가능
    => visudo를 사용하면 임시저장파일이 생성되며, 해당 파일에 
         수정을 하게 됨.
    ==> 수정 완료 후 저장할 때는 오류 검사 후 이상 없을 경우 저장

 ◇ wheel 그룹 사용
  - 관리자 권한을 가지고 있는 기본 그룹
  - sudo권한을 갖게 하려는 계정을 wheel 그룹에 속하게 함.

■ su 권한 제한
 ◇ su 권한
# su  [계정]
  - 현재 사용자를 로그아웃 하지 않고 바로 다른 사용자 계정으로
     전환하는 명령어
  - su 명령어 실행 시 계정을 적지않으면 root로 전환.
  -> 일반 사용자의 su 명령어 제한이 필요

 ◇ 퍼미션 변경을 통한 su 명령어 제한
# which su
# ls -l /usr/bin/su
  - SetUID가 적용되어 있기때문에 일반 사용자도 root 전환 가능
  - other 부분에 실행 권한 제거를 통해 다른 사용자의 실행을 금지
  - 필요에 따라 관리자 그룹을 소유 그룹으로 하여 관리자 계정은
     su 명령어를 사용할 수 있게 한다.
# chmod 4750 /usr/bin/su
# chmod 4750 /bin/su
# chgrp admin /usr/bin/su  
# chgrp admin /bin/su  

 ◇ pam 모듈을 통한 su 명령어 제한
# vim /etc/pam.d/su
  - 4행과 6행 둘 다 휠 그룹에 속해있는 사용자만 su 명령어 사용.
  - 4행은 su 명령어 실행 시 비밀번호 없이 사용

※ 가상머신 만들기
이름 : DNS-Server(ip 10)
IOS : CentOS7 2009 dvd (Minimal Ver) 영어
나머지 다 기본
네트워크 어댑터 : 
1. NAT : DHCP
2. 호스트 전용 IP : 192.168.56.10/24

■ 도메인
 1. Root Level Domain
  - 도메인 구조에서 최상위를 차지하는 도메인
 2. Top Level Domain
  - ccTLD, gTLD로 나눠짐.
  - IANA에서 관리
 3. Second Level Domain
  - 회사나 조직 등의 목적에 부합하는 단어 및 숫자를 이용해 생성
 4. Third Level Domain
  - 각 목적에 따라 생성된 도메인, 보통 서브도메인이라고도 함
 ※ www.dk.com.
  -> 제일 뒤에 .이 루트레벨도메인. 일반적으로 브라우저에 입력 시 생략
  -> com이 탑레벨도메인, gTLD (com, net, org등등)
  -> dk가 세컨드레벨 도메인. (회사 이름등등)
  -> www가 써드레벨 도메인
  -> 호스트의 이름과 도메인의 이름을 포함한 전체 도메인 이름을 
      FQDN (Full Qualified Domain Name)

■ DNS 서버
 ◇ DNS 서버 종류
   1. 로컬 DNS 서버
     - 클라이언트에게 질의를 받아 자신의 캐시나 Root DNS 서버
       로의 질의를 통해 IP를 얻어 제공해주는 역할
   2. 마스터 DNS 서버
     - 우리 회사에서 제공하는 서비스 등을 알려주는 역할
     - 반복 질의의 마지막 DNS 서버

 ◇ 로컬 DNS 서버 구축
   1. 원하는 서비스를 제공하는 패키지 찾기
     ex) 웹 - Apache, Nginx / DNS - bind(named)
   2. 패키지 설치
# yum install -y bind bind-utils 
# rpm
   2-2. 패키지 설치 확인
# rpm -qa | grep bind

   3. 제공하는 환경에 맞게 서비스 설정
# vim /etc/named.conf
	13행 127.0.0.1 변경 (접속할 수 있는 애들)
	21행 localhost 변경 (질의를 허용하는 애들)

   4. 설정 적용 및 재시작, 부팅 시 시작 설정, 확인
# systemctl restart  / enable / status
# systemctl restart named
# systemctl enable named
# systemctl status named

   5. 방화벽 열기
# firewall-cmd --add
# firewall-cmd --add-port=53/tcp
# firewall-cmd --add-port=53/udp
# firewall-cmd --add-port=53/udp --permanent
# firewall-cmd --add-port=53/tcp --permanent

   6. 방화벽 설정 확인
# firewall-cmd --list-all

  (7. 포트 릿슨 확인]
# netstat -nltp

 ◇ 마스터 DNS서버 (권한 DNS서버)
   - 회사나 단체 등에서 서비스하는 서버의 IP주소를 제공
   - 정방향과 역방향 DNS으로 나눠짐
   ※ 사용되는 레코드
	TTL : DNS 정보 캐시 저장 시간
	@ : 도메인을 나타내는 기호
      ---------- 리소스 레코드 ------------
	NS : DNS 서버 지정
	A : host를 IP로 매핑 (IPv4)
	AAAA : host를 IP로 매핑 (IPv6)
	MX : 메일 서버 지정, 뒤에 정수를 지정하여 사용
	CNAME : 별칭
	PTR : IP 주소를 host로 매핑 (역방항 DNS에서 사용)

  ▷ 정방향 DNS
   - 도메인을 IP 주소로 매핑
zone "dk.com" IN {
        type master;
        file "dk.com.db";
};

# vim /var/named/dk.com.db
$TTL 3H
@       IN SOA  ns.dk.com.  admin.dk.com. (
                                23042801        ; serial
                                        1D      ; refresh
                                        1H      ; retry
                                        1W      ; expire
                                        3H )    ; minimum
        NS      ns.dk.com.
        A       192.168.56.10
        MX      10 mail.dk.com.

ns      A       192.168.56.10
mail    A       192.168.56.50
www     A       192.168.56.6
cafe    CNAME   www
blog    CNAME   www
5FL3    A       192.168.100.51
5FL9    A       192.168.100.59
R1      A       192.168.100.11

  ▷ 역방향 DNS
zone "56.168.192.in-addr.arpa" IN {
        type master;
        file "dk.com.rev";
};

# vim /var/named/dk.com.rev
10      PTR     ns.dk.com.
50      PTR     mail.dk.com.
6       PTR     www.dk.com.

  ▷ 문법 오류 체크
# named-checkconf /etc/named.conf
	=> 컨피크 파일 체크
# named-checkzone dk.com /var/named/dk.com.db
	=> 존파일 체크
# named-checkzone 56.168.192 dk.com.rev
	=> 존파일 체크

※ DNS 서버에 물어보기 
# nslookup	// DNS서버에 대화형 질의
> server		// 설정된 DNS서버 확인
> server 192.168.56.10	// 질의할 DNS서버 지정
> www.dk.com
=====> 알려주도록 해보세요.
	힌트 : 저번 주에 했었던 내용 중 하나임
	힌트 2 : ls -l
	힌트 3 : 소유권과 허가권

※ 가상서버 만들기 (버츄얼박스)
이름 : WEB-Server (IP 6)
IOS : CentOS 8 stream latest - Server with GUI
언어 : 한국어
RAM : 2G
나머지 다 기본
네트워크 어댑터 
	1 : NAT		DHCP
	2 : 호스트전용	192.168.56.6/24
※ 네트워크 설정 (GUI)
 바탕화면에 마우스 우클릭 -> 설정 -> 좌측 네트워크 클릭
우측 네트워크 어댑터 옆에 바퀴모양 클릭 -> 첫 탭에서
자동으로 연결 체크 -> IPv4에서 설정
	==> VMware로 설치하신 분은 DNS 8.8.8.8로 설정

 ◇ 워드프레스 연결
  1. 워드프레스 요구사항 확인
    - PHP 7.4 이상, MariaDB 10.3 이상, apache
	=> PHP 버전 안맞음
 
  2. 외부 저장소 연결 후 PHP 버전 업
    - RedHat의 저장소 정책은 안정성 위주이기 때문에 업데이트가
      느림
    - 커뮤니티 기반의 epel 저장소 설치
      (Extra Package of Enterprise Linux)
# dnf install -y epel-release
# dnf module list php
	// 사용 가능한 PHP 모듈 확인
# dnf module enable php:7.4
	// PHP 7.4 버전 활성화
# dnf module list php
	// 활성화 확인

  3. 패키지 설치
# dnf install -y php php-mysqlnd httpd mariadb-server

  4. 패키지 설정
# vim /etc/httpd/conf/httpd.conf

  5. 솔루션 다운로드 및 풀기, 이동
# wget https://ko.wordpress.org/latest-ko_KR.tar.gz
# tar xfz latest-ko_KR.tar.gz
# mv wordpress /var/www/html

  6. 솔루션이 사용할 DB 생성
   - DB 이름 : wpDB
   - 사용자 : wpAdmin
   - 비번 : Password
> create database wpDB;
> grant all privileges on wpDB.* to wpAdmin@localhost identified by 'Password';

  7. 서비스 재시작 및 방화벽 등록
# systemctl restart httpd
# systemctl restart mariadb
# systemctl enable mariadb
# systemctl enable httpd
# firewall-cmd --add-service=http
# setenforce 0
# vim /etc/selinux/config

8. 접속 및 솔루션 설정
# cp wp-config-sample.php wp-config.php
# vim wp-config.php
	23행부터 DB 관련 설정	
웹브라우저에서 http://192.168.56.6/wordpress/

# vim /etc/httpd/conf/httpd.conf
	122행, 134행
	=> IP로만 접속 가능

■ 프로세스
 ◇ 프로세스
  - 시스템에 실행 중인 프로그램
  - 프로그램을 설치하면 디스크에 저장 -> 특정한 목적을 가지고 프로그램을 실행
    -> 메모리에 상주 -> 실행되어 메모리에 상주하는 프로그램을 프로세스라고 함.
  - 프로그램이 실행 시 프로세스번호(PID)가 할당되어 PID로 관리
  - 최상위 프로세스인 systemd를 기준으로 트리형식으로 이루어짐
	-> 리눅스가 켜질 때 systemd가 제일 먼저 실행
  - 모든 프로세스는 부모-자식 관계를 가지고 있으며 부모 프로세스를 종료하면
    자식 프로세스도 종료된다.

 ◇ 포어그라운드 프로세스
  - 실행하면 모니터에 나타나서 사용자와 상호작용 하는 프로세스
  - 어떤 명령을 실행하면 끝날 때까지 기다려야함
  - 거의 대부분의 응용프로그램

 ◇ 백그라운드 프로세스
  - 실행은 되어있지만 화면에 나타나지 않는 프로세스
  - 서버 데몬

 ◇ 고아 프로세스
  - 자식 프로세스가 실행 중일 때 부모 프로세스가 종료된 것
  - 1번 프로세스를 부모 프로세스로 하여 계속 실행됨.
  - 1번 프로세스가 작업(종료) 지원

 ◇ 좀비 프로세스
  - 프로세스가 종료되었는데도 테이블 목록에 남아있는 것

 ◇ systemd
  - PID 1번을 사용하는 최상위 프로세스이며 부팅될 때 최초로 실행되는 프로세스
  - CentOS 7버전부터 사용됨
  - init 프로세스에 대한 호환성 제공
  - 시스템 부팅 시 전원 ON -> 바이오스 -> 부트로더 -> 커널 -> systemd -> 부팅 완료
    : 시스템이 부팅될 때 최소한의 서비스만 실행하여 부팅시간 단축
     -> 부팅 완료 후 필요한 서비스들은 병렬로 실행

 ◇ 작업 전환하기 ( 포어그라운드 <-> 백그라운드)
  - 작업을 멈췄다가 백그라드로 실행 또는 그 반대
  - 작업 일시중지 (작업 대기) : Ctrl + z
  - 작업 프로세스 확인 : jobs
# ping 8.8.8.8 > /dev/null
Ctrl + z
# jobs
# bg	// 백그라운드로 실행
[1]+ ping 8.8.8.8 > /dev/null &
# fg 1
# ping 8.8.8.8 > /dev/null &

  ◇ kill
   - 프로세스에 특정한 시그널을 보내는 명령
   - 시그널 번호 없이 kill을 한 경우는 정상 종료 (=15)
   - 시그널 번호 9번은 강제종료
# kill  -[시그널 번호]  [PID또는 %작업번호]

  ◇ pstree
   - 프로세스를 트리 형식으로 보여줌
# pstree
	-p	: PID 표시
	-n	: PID값으로 정렬

 ◇ ps
   - 사용자의 실행 중인 프로세스 목록을 확인
   - 보려는 항목에 따른 대표적인 옵션
	PID, PPID등 ps -ef
	CPU사용률, 메모리 사용률, 메모리 사용량등 ps aux

 ◇ top
  - 프로세스를 실시간으로 볼 수 있음 (약 5초마다 갱신)
  - 첫번째 줄 : 현재시간 / 서버 가동 후 유지시간 / 접속 유저수
  	      시스템 부하 (최근 1분, 5분, 15분)
  - 두번째 줄 : 프로세스 상태
  - 세번째 줄 : CPU 사용량
  - 네번째 줄 : 메모리 사용량
  - 다섯번째 줄 : swap 메모리 사용량
  - h : 도움말, f : 목록 수정, l : 첫번째줄 토글, t : 두세번째 토글, m : 메모리 토글

※ 가상머신 설치
DHCP-Server
NTP-Server

----------------------------------------------------------------------------------
■ LINK
   - 파일 연결
 ※ 아이노드 (inode)
  - 각 파일에 대한 주요 정보 보관
  - 파일의 소유자, 접근 권한, 파일 크기, 최근 접근시간, 생성시간,
    파일 내용이 보관되어있는 데이터 블록의 위치 등의 정보가 저장
  - 일반적으로 전체 공간의 약 1%를 아이노드를 위해 할당.
  - 아이노트의 공간이 한정되어 있는 만큼 파일 생성 최대 개수도 한정.

 ◇ 하드링크
  - 동일한 inode 사용
  - 원본의 이동이나 삭제에 관계가 없이 존재
  - 파일 복사랑 비슷하나, 용량의 증가는 없음.
  - 동일한 파일시스템에만 적용
# ln  [링크대상파일]  [링크파일]

 ◇ 심볼릭 링크(소프트링크)
  - 새로운 inode 생성
  - 윈도우의 바로가기랑 유사함.
  - 원본의 이동이나 삭제 시 링크가 끊김
  - 다른 파일 시스템에도 적용 가능
  - 디렉토리는 심볼릭 링크만 가능
# ln  -s  [링크대상파일]  [링크파일]

※ 심볼릭 링크를 이용하여 타임존 변경

■ 시간 관련
 ◇ timedatectl
# timedatectl
	// 현재 설정되어 있는 시간 및 타임존 확인
# timedatectl list-timezones
	// 리눅스에 구성되어 있는 타임존 확인
# timedatectl set-timezone [타임존]
	// 타임존 변경

 ◇ date
  - 현재 서버에 설정되어 있는 시간/날짜 출력
  - date를 통한 수동 시간 설정
#  date  [mmddHHMMyyyy]

 ◇ rdate
  - rdate를 통한 인터넷 시간 동기화
# rdate  [옵션]  [인터넷 시간 서버]
	-p	: 인터넷 시간 서버 시간 확인
	-s	: 인터넷 시간 서버와 동기화
	
■ 파일 묶기 및 압축
 ◇ 파일 압축
  - xz, bzip2, gzip, zip, compress
  ▷ 파일 압축 시
#  xz  [파일]		=> [파일].xz
#  bzip2  [파일]		=> [파일].bz2
#  gzip  [파일]		=> [파일].gz
#  zip  [결과이름].zip  [파일]	=> [결과이름].zip

  ▷ 파일 압축 해제 시  
#  xz  -d  [파일].xz
#  bzip2  -d  [파일].bz2	(= bunzip2  [파일].bz2)
#  gzip  -d  [파일].gz	(= gunzip  [파일].gz)
#  unzip  [결과이름].zip
	-d	: 디렉토리 지정
	-q	: 압축 해제 메세지 안보임
  ※ 리눅스 전용 압축은 원본 파일이 압축 파일로 바뀜
	
 ◇ 파일 묶기 (tar)
  - 여러 파일이나 디렉토리를 단일 파일로 만듦.
#  tar  [옵션]  [결과이름].tar  [대상]
	동작옵션 : c(묶기), x(풀기), r(추가), t(확인)
	일반옵션 : f(필수옵션), v(진행과정확인)
	압축옵션 : J(xz), j(bzip2), z(gzip)
   ※ 추가옵션 	-C [디렉토리] : 풀 디렉토리 지정
		P : 절대경로 사용 시

■ 네트워크 관련 
 ◇ IP 명령
  - IP 명령어는 리눅스 시스템에서 IP주소를 설정하거나 확인할 때 사용
  - 또는 IP주소 및 라우팅 테이블, ARP 캐시등의 정보 확인 
  ▷ ip address	
   - 네트워크 장치의 주소 관리
# ip address show	(줄여서 ip a)   
	// 전체 장치의 주소 확인
# ip address show enp0s3	
	// 특정 장치만 확인
# ip -br add
	// IPv4, IPv6 만 확인
# ip address [add/del] [IP주소] dev [장치이름]
	// 특정 장치에 IP 주소 추가 또는 지우기

  ▷ ip route
   - 라우팅 테이블 확인
# ip route
	// 라우팅 테이블 확인
# ip route add 192.168.57.0/24 via 192.168.56.2 dev enp0s8
	// 스태틱 라우팅 설정

  ▷ ip neighbor
   - ARP 정보 확인	
# ip neighbor
	// ARP 정보 확인 (윈도우의 arp -a)
# ip neighbor del [IP주소] dev [장치]
	// [장치]로 부터 받은 [IP주소]의 ARP 정보 삭제
# ip neighbor flush dev [장치]
	// [장치]로 부터 받은 ARP 정보 전체 삭제

※ ip 명령으로 IP 주소 또는 라우팅 정보 변경 시 일시적으로 적용
 => 영구적으로 적용할 때는 /etc/sysconfig/network-scripts/ 디렉토리에
      설정파일 변경
# vim /etc/sysconfig/network-scripts/route-enp0s8
ADDRESS0=192.168.57.0
NETMASK0=255.255.255.0
GATEWAY0=192.168.56.2

 ◇ NetworkManager
    - 네트워크 관리자는 CentOS7부터 적용된 네트워크 제어와 설정을
      관리하는 데몬
    - 네트워크 설정 정보를 연결 프로파일에 저장.
   ※ IP 명령어는 일시적(런타임), 네트워크 매니저는 영구적 설정
  ◇ nmcli
     - 네트워크 매니저의 명령 기반 도구
   ▷ 명령 문법
#  nmcli  [옵션]  명령  {서브명령}
	-t	: 결과를 간략하게 출력
	-h	: 사용자가 읽기 좋게 출력

   ▷ general (gen)  
    - 네트워크 전체 상태를 간략하게 확인

   ▷ connection (con)
     - 네트워크 설정
    ▽ 서브명령
      show [장치] : 장치의 연결 상태 출력	
      down [장치] : 연결 비활성화
      up [장치] : 연결 활성화
      modify : 속성을 추가, 수정, 삭제
      => modify 예시
# nmcli con modify enp0s8 ipv4.addresses 192.168.56.110/24	
	// enp0s8에 IP주소 변경
# nmcli con modify enp0s8 +ipv4.addresses 192.168.56.110/24
	// enp0s8에 IP주소 추가
# nmcli con modify enp0s8 -ipv4.addresses 192.168.56.110/24
	// enp0s8에 IP주소 삭제

[심심하면 해보세요]
■ OWNCloud 솔루션 구축
 ◇ 필요 패키지
httpd mariadb-server php php-mysqlnd php-gd 
php-mbstring php-pecl-zip php-xml php-json php-intl

 ◇ 솔루션 다운로드 주소
# wget https://download.owncloud.com/server/stable/owncloud-10.3.0.zip
# unzip owncloud~
# mv owncloud~  /var/www/html/owncloud

 ◇ 중간 추가 설정
  1. /var/www/html/owncloud 안에 data디렉토리 생성
  2. owncloud 디렉토리 퍼미션은 755로 설정

------------------------------------------------------------------------------------------------
■ 라우터
 ◇ 라우터란?
  - 라우터는 3계층 장비
  - 라우터는 방화벽, VPN, 접근제어, NAT 등의 기능이 있지만 기본 기능은 라우팅
  - 라우팅이란 특정 인터페이스로 수신된 패킷의 목적지 주소를 확인하고,
    목적지와 연결된 인터페이스로 전송하는 것
  - 라우터의 기본 기능은 경로 결정과 경로에 따른 Packet 전송(패킷스위칭)
  - 경로 결정 : 패킷이 목적지로 갈 수 있는 경로를 확인하고 다수의 경로가 있을 경우 어떤 경로가
                   가장 최적 경로(Best Path)인지를 결정하는 것
  - 패킷 스위칭 : 수신한 패킷을 결정된 경로대로 전송하는 것
  - 라우팅 테이블 : 목적지 네트워크 및 연결된 인터페이스를 기록한 데이터베이스
	            라우터는 라우팅 테이블을 보고 패킷을 전송 (경로가 없으면 폐기)        

 ◇ 라우터의 부팅 과정
   1. Power On Self Test (POST)
     - 각 하드웨어 요소의 동작 이상유무 체크
   2. Load and Run Bootstrap 
     - POST 이후 Bootstrap이 RAM으로 복사되어 실행
   3. Find IOS
   4. Load IOS
   5. Find Configuration
    - Startup-Config를 찾음
   6. Load Configuration
    - Startup-Config가 있을 경우 설정 적용
    - 없을 경우 Setup 모드로 진입
   7. Run

※ 조별 패치판넬 연결하기
 - 각 장비의 Console 포트와 패치판넬 연결

■ 네트워크 장비 SSH 접속 설정
  1. 키 생성
   a. 키 생성을 위한 사전 설정
    - 개별 hostname 지정 (기본 이름 X)
	#Router(config)# hostname R1
    - 도메인 이름 지정 
	#R1(config)# ip domain-name dk.com
   b. 키 생성
	#R1(config)# crypto key generate rsa
  2. SSH Version 설정
    - Version 2 사용
	#R1(config)# ip ssh version 2
  3. 접속 시 SSH 적용 설정
    - 원격 접속 포트는 line vty
    -> 기본 접속은 Telnet 설정
    -> 접속 시 SSH 적용이 되도록 지정 가능
	#R1(config)# line vty 0 4
	#R1(config-line)# transport input ssh
	#R1(config-line)# login local

■ 수동 축약
 ▷ 수동 축약을 하는 이유
  - 라우팅 테이블 크기 감소
  - 한 구역의 네트워크 변화가 다른 구역의 라우팅 테이블
    변화가 안되게 하기 위해
 ▷ 설정하는 곳
  - 주로 ABR(영역경계, OSPF의 경우), ASBR에서 지정
  - 라우팅 데이터를 보내는 인터페이스에서 지정.
[[0526]]
<< 참고사항 >>
clear ip ro *
passive-interface
neighbor
ip summary-address
ip rip authentication
show ip protocol

■ EIGRP
 ◇ EIGRP로 묶이기 위한 조건
  1. 같은 AS
  2. 같은 대역
  3. K상수가 같아야 한다.
  4. 같은 인증

 ◇ EIGRP 패킷
HELLO  	---->
   	    	<----	HELLO  	(네이버 만족)

UPDATE 	---->
       		<----	ACK	(데이블 교환)
       		<----	UPDATE
ACK		---->		
----------------------	(장애발생)
QUERY	----->
	<----	ACK
	<----	REPLY
ACK	----->
----------------------
HELLO  	---->
	       	<----	HELLO  
----------------------	(장애복구)
UPDATE 	---->
	       	<----	ACK	(데이블 교환)
	       	<----	UPDATE
ACK	----->

■ 재분배
 - 라우팅 프로토콜이 다른 경우 경로 정보의 형식과 전달 절차 등이
   달라서 서로 간 정보교환이 불가능.
 - 경로 재분배를 통해 각 라우팅 프로토콜에서 작성된 경로 정보를
   다른 라우팅 프로토콜로 전달하여 등록

◇ EIGRP 메트릭 계산
 [K1*BW + K2*BW / (256-load) + K3*Delay ] * 256 * K5/(Reliability + K4)
 [K1*BW + K2*BW / (256-load) + K3*Delay] * 256

■ EIGRP Topology Table
   - Neighbor에게 Update 받은 모든 네트워크와 그 네트워크의 Metric 정보를 저장하는
     DataBase. Topology table에는 현재의 Router에서 목적지 네트워크 까지의 Metric 
     값과 Next-hop Router에서 목적지 네트워크까지의 Metric 값이 모두 저장.
   - 이웃 EIGRP 라우터(Neighbor Router)들로 부터 학습한 경로의목록
     P : Passive => 경로 산출이 완료된 상태 ( 사용 가능한 경로 )
     A : Active  => 경로 산출중 ( Query 를 보낸후 Reply 를 못받은 상태)- 사용불가
  1) FD(Feasible Distance)
    => 출발지에서 목적지 network까지의 전체 Metric을 의미.
    => FD 값이 가장 낮은 경로가 Best Path로 선출.
  2) AD(Advertised Distance)
    => 출발지 장비의 Next-hop 부터 목적지 network까지의 Metric 의미.
  3) Successor
    => Best Path(최적 경로) 상의 next-hop 라우터를 의미.
        FD가 가장 낮은 경로의 다음 Router.
  4) Feasible Successor
    => Loop가 없다고 확인된 Backup Path 상의 next-hop 라우터 의미.
      [Best Path(최적 경로)의 FD] > [Backup Path(후속 경로)의 AD]
    => 위의 조건에 만족이 되지 않는 Backup 경로는 Topology Table에 등록되지 않고, Best Path 장애시 Query 
       패킷을 사용하여 확인 후 routing table에 등록.





